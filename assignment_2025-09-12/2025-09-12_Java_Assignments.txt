import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
}
public class MainClass1 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        // boolean add(Object o)
        al.add(new Employee(1, "Jalib", 9995550077L));
        al.add(new Employee(2, "Karthik", 1234567890L));
        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
}

public class MainClass2 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        //void  add (int index, Object o)
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        al.add(1,new Employee(11, "Kenz", 9567550077L));
        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
}

public class MainClass3 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        Vector<Employee> al2 = new Vector<>();
        al2.add(0,new Employee(1, "Lokesh", 7816278377L));
        al2.add(1,new Employee(2, "Gowtham", 9985642638L));
        //addAll(collection c)
        al.addAll(al2);
        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
}

public class MainClass4 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        Vector<Employee> al2 = new Vector<>();
        al2.add(0,new Employee(1, "Lokesh", 7816278377L));
        al2.add(1,new Employee(2, "Gowtham", 9985642638L));
        //addAll(int index, Collection c)    
        al.addAll(1,al2);
        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
}

public class MainClass5 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));

        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
        System.out.println("Clearing about to start and print output");
        al.clear();
        System.out.println(al);
        System.out.println("Printed output after clear");

    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
    public boolean equals(Object o){
        Employee e = (Employee) o;
        return this.empId==e.empId && this.empName==e.empName && this.mobNumber==e.mobNumber;
    }
}

public class MainClass6 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        al.add(0,new Employee(1, "Lokesh", 7816278377L));
        al.add(1,new Employee(2, "Gowtham", 9985642638L));
        //contains(Object o) 
        for (int i = 0; i < al.size(); i++) {
            Object o=al.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }
        if(al.contains(new Employee(2, "Karthik", 1234567890L))){
            System.out.println("Yes it contains");
        }
        else{
            System.out.println("No, it doesn't contains");
        }

    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
    public boolean equals(Object o){
        Employee e = (Employee) o;
        return this.empId==e.empId && this.empName==e.empName && this.mobNumber==e.mobNumber;
    }
    static void printVector(Vector<Employee> xlist){
        for (int i = 0; i < xlist.size(); i++) {
            Object o=xlist.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }

    }
}

public class MainClass7 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);
        Vector<Employee> al2 = new Vector<>();
        al2.add(0,new Employee(1, "Jalib", 9995550077L));
        al2.add(1,new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al2);
        
        
        //equals (Object o)
        
        if(al.equals(al2)){
            System.out.println("Yes they are both same");
        }
        else{
            System.out.println("No, they are not same");
        }

    }
}import java.util.Vector;
class Employee{
    int empId;
    String empName;
    long mobNumber;


    Employee(int empId, String empName, long mobNumber){
        this.empId=empId;
        this.empName=empName;
        this.mobNumber=mobNumber;
    }

    public String toString(){
        return  "Employee[ "+
                "Employee ID: "+empId+" | "+
                "Employee Name: "+empName+" | "+
                "Mobile Number: "+mobNumber+
        " ]";
    }
    public boolean equals(Object o){
        Employee e = (Employee) o;
        return this.empId==e.empId && this.empName==e.empName && this.mobNumber==e.mobNumber;
    }
    static void printVector(Vector<Employee> xlist){
        for (int i = 0; i < xlist.size(); i++) {
            Object o=xlist.get(i);
            Employee e=(Employee)o;
            System.out.println(e);
        }

    }
}

public class MainClass8 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0,new Employee(1, "Jalib", 9995550077L));
        al.add(1,new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);
        Vector<Employee> al2 = new Vector<>();
        al2.add(0,new Employee(1, "Jalib", 9995550077L));
        al2.add(1,new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al2);
        
        
        //get(int index)
        System.out.println("//get(int index)");
        System.out.println(al.get(0));
        


    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9 {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);

        // remove(int index)
        System.out.println("//remove(int index)");
        al.remove(0);
        Employee.printVector(al);

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9a {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);

        //remove(Object 0)
        System.out.println("//remove(Object 0)");
        al.remove(al.get(1));
        // al.removeIf(p -> p.empName.equals("Karthik"));
        Employee.printVector(al);

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9b {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);

        Vector<Employee> al2 = new Vector<>();
        al2.add(0, new Employee(1, "Bharath", 1234566760L));
        al2.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al2);

        //remove(Collection c)
        System.out.println("//remove(Collection c)");
        al.removeAll(al2);
        Employee.printVector(al);

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9c {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);

        Vector<Employee> al2 = new Vector<>();
        al2.add(0, new Employee(1, "Bharath", 1234566760L));
        al2.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al2);

        //retainAll(Collection c)
        System.out.println("//retainAll(Collection c)");
        al.retainAll(al2);
        Employee.printVector(al);

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9d {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);


        //set(int index, Object o)
        System.out.println("//set(int index, Object o)");
        al.set(0,new Employee(777, "Jalib Kenz", 7778880011L));
        Employee.printVector(al);

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9e {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);


        //size()
        System.out.println("//size()");
        System.out.println("The size of the Vector is: "+al.size());

    }
}import java.util.Vector;

class Employee {
    int empId;
    String empName;
    long mobNumber;

    Employee(int empId, String empName, long mobNumber) {
        this.empId = empId;
        this.empName = empName;
        this.mobNumber = mobNumber;
    }

    public String toString() {
        return "Employee[ " +
                "Employee ID: " + empId + " | " +
                "Employee Name: " + empName + " | " +
                "Mobile Number: " + mobNumber +
                " ]";
    }

    public boolean equals(Object o) {
        Employee e = (Employee) o;
        return this.empId == e.empId && this.empName == e.empName && this.mobNumber == e.mobNumber;
    }

    static void printVector(Vector<Employee> xlist) {
        for (int i = 0; i < xlist.size(); i++) {
            Object o = xlist.get(i);
            Employee e = (Employee) o;
            System.out.println(e);
        }

    }
}

public class MainClass9f {

    public static void main(String[] args) {
        Vector<Employee> al = new Vector<>();
        al.add(0, new Employee(1, "Jalib", 9995550077L));
        al.add(1, new Employee(2, "Karthik", 1234567890L));
        Employee.printVector(al);


        //toArray()
        System.out.println("//toArray()");
        Object[] oarr=al.toArray();

        for (int i = 0; i < oarr.length; i++) {
            System.out.println("----------");
            System.out.println(oarr[i]);  // calls toString()
            
        }

    }
}